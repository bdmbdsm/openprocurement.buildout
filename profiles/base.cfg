[buildout]
extensions = mr.developer
package-name =
    openprocurement.api
    openprocurement.chronograph
    openprocurement.concord
    openprocurement.auctions.core
    openprocurement.auctions.flash
    openprocurement.auctions.rubble
    openprocurement.auctions.swiftsure
    openprocurement.auctions.tessel
    openprocurement.auctions.lease
    openprocurement.auctions.geb
    openprocurement.auctions.appraisal
    openprocurement.contracting.core
    openprocurement.contracting.ceasefire
    openregistry.assets.core
    openregistry.assets.bounce
    openregistry.lots.core
    openregistry.lots.loki
    openregistry.concierge
    openregistry.convoy
    openprocurement.caravan
    openprocurement.bridge.basic
    openprocurement_client
    openprocurement.schemas.dgf
    schematics-flexible
    openprocurement.configurator.ea2

parts =
    scripts
    couchpy
    circus
    circusd
    circusctl
    extra_scripts
    openprocurement.concord

eggs =
    chaussette
    request_id_middleware
    server_cookie_middleware
    munch
    pyramid
    repoze.profile
    ${:package-name}
index = https://pypi.python.org/simple
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[config-from-template]
recipe = collective.recipe.genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts =
    chaussette
    prequest
    migrate

[extra_scripts]
recipe = zc.recipe.egg
eggs =
     ${buildout:eggs}
     openregistry.concierge
     openprocurement.bridge.basic

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd

[couchpy]
<=circus
eggs = CouchDB
scripts =
    couchpy
    couchdb-replicate

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ipc://${buildout:directory}/var/circus_endpoint').split()
scripts = circusctl

[openprocurement.concord]
recipe = zc.recipe.egg
entry-points = concord=openprocurement.concord.daemon:main
#arguments = '${openprocurement.api.ini:couchdb_url}', '${openprocurement.api.ini:couchdb_db}', '${buildout:directory}/var/${:_buildout_section_name_}.status', '${buildout:directory}/var/${:_buildout_section_name_}'


[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid
